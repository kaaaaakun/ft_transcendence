worker_processes 1;

user nobody nogroup;  # Nginx のプロセスを実行するユーザーとグループを 'nobody' に設定します。セキュリティの観点から、特権の少ないユーザーで実行します。
error_log /var/log/nginx/error.log warn;  # エラーログの出力先を指定し、ログレベルを 'warn' に設定します。警告レベル以上のメッセージが記録されます。
pid /var/run/nginx.pid;  # Nginx のプロセス ID を保存するファイルのパスを指定します。プロセス管理に使用されます。

events {
    worker_connections 1024;
}

http {
    include mime.types;  # MIME タイプを定義したファイルをインクルードし、ファイルの拡張子に応じた適切なコンテンツタイプを設定します。
    default_type application/octet-stream;  # デフォルトのコンテンツタイプを設定します。指定がない場合に使用されます。
    access_log /var/log/nginx/access.log combined;  # アクセスログの出力先とログフォーマットを設定します。'combined' は一般的なログフォーマットです。
    sendfile on;  # ファイルの転送を効率化するために 'sendfile' を有効にします。ファイル転送のパフォーマンスを向上させます。


    upstream frontend {
        server web:5173;
    }

    upstream backend {
        server api:8000;
    }

    server {
        listen 443 ssl;
        ssl_certificate /etc/ssl/certs/ca-certificates.pem;
        ssl_certificate_key /etc/ssl/private/ca-certificates.pem;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers HIGH:!aNULL:!MD5;

        location / {
            proxy_pass http://frontend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /api/ {
            proxy_pass http://backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_buffering off; #リアルタイム性を重視する
            proxy_ignore_client_abort on; #クライアントによる中断を無視して処理を続行(切断されても処理を実行)
        }
    }

    server {
        listen 80;
        return 301 https://$host$request_uri;
    }
}

