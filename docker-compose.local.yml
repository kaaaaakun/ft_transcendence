services:
  rdbms:
    image: postgres:16-alpine
    container_name: "rdbms"
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - vol_rdbms:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - "5432:5432"
    networks:
      - net_pong

  static-builder:
    build:
      context: static-builder/
      target: development
    container_name: "static-builder"
    ports:
      - "5173:5173"
    volumes:
      - ./static-builder:/usr/src/vite
    entrypoint: ["sh", "-c", "pnpm config set store-dir /tmp/pnpm/store && pnpm install --frozen-lockfile && pnpm dev"]

  reverseproxy:
    build:
      context: reverseproxy/
    container_name: "reverseproxy"
    image: nginx:1.26.1-alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.local.conf:/etc/nginx/nginx.conf
    networks:
      - net_pong

  api:
    build:
      context: api/
    container_name: "api"
    networks:
      - net_pong
    ports:
      - "8000:8000"

networks:
  net_pong:
    name: "net_pong"

volumes:
  vol_reverseproxy:
    name: "vol_reverseproxy"
  vol_rdbms:
    name: "vol_rdbms"
