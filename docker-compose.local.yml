services:
  rdbms:
    image: postgres:16-alpine
    container_name: "rdbms"
    restart: on-failure
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - vol_rdbms:/var/lib/postgresql/data
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB} && pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB} || exit 1",
        ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 120s
    ports:
      - "5432:5432"
    networks:
      - net_pong

  static-builder:
    build:
      context: .
      dockerfile: static-builder/Dockerfile
      target: development
    container_name: "static-builder"
    restart: on-failure
    environment:
      - VITE_API_URL
      - VITE_WEBSOCKET_URL
    volumes:
      - ./static-builder:/usr/src/vite
    networks:
      - net_pong
    healthcheck:
      test: ["CMD", "curl", "-I", "http://localhost:5173/"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 120s
    entrypoint:
      [
        "sh",
        "-c",
        "pnpm config set store-dir /tmp/pnpm/store && pnpm install --frozen-lockfile && pnpm dev",
      ]

  reverseproxy:
    container_name: "reverseproxy"
    restart: on-failure
    image: nginx:1.26.1-alpine
    ports:
      - "80:80"
    volumes:
      - ./reverseproxy/nginx.local.conf:/etc/nginx/nginx.conf
      - avatars_data:/var/www/data/avatars
    networks:
      - net_pong
    depends_on:
      api:
        condition: service_healthy
      static-builder:
        condition: service_healthy
      rdbms:
        condition: service_healthy

  api:
    build:
      context: .
      dockerfile: api/Dockerfile
      target: deploy_asgi
    container_name: "api"
    restart: on-failure
    networks:
      - net_pong
    volumes:
      - avatars_data:/var/www/data/avatars
    environment:
      DJANGO_SUPERUSER_USERNAME: ${DJANGO_SUPERUSER_USERNAME}
      DJANGO_SUPERUSER_EMAIL: ${DJANGO_SUPERUSER_EMAIL}
      DJANGO_SUPERUSER_PASSWORD: ${DJANGO_SUPERUSER_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    depends_on:
      rdbms:
        condition: service_healthy
      in_memory_db:
        condition: service_healthy
    healthcheck:
      test:
        [
          "CMD",
          "curl",
          "-H",
          "Host: reverseproxy",
          "http://localhost:8000/health/",
        ]
      interval: 5s
      retries: 5
      start_period: 120s

  in_memory_db:
    container_name: "in_memory_db"
    image: redis:7.4.2
    networks:
      - net_pong
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping | grep PONG"]
      interval: 1s
      timeout: 3s
      retries: 5
    ports:
      - "6379:6379"

networks:
  net_pong:
    name: "net_pong"

volumes:
  vol_rdbms:
    name: "vol_rdbms"
    
  avatars_data:
    name: "avatars_data"
