openapi: 3.0.0
info:
  title: Tournament API
  version: 1.0.0
  description: トーナメント、試合、プレイヤーの管理用API。
  contact:
    name: とらせん
    url: https://www.example.com/support
    email: support@example.com    
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html

tags:
  - name: local_play
    description: localでponggameを遊ぶためのAPI

paths:
  /api/tournaments/local:
    post:
      tags:
        - local_play
      summary: トーナメントの作成
      description: プレイヤーのリストを使用して新しいトーナメントを作成します。プレイヤーの数は2の累乗（例：2、4、8、16）でなければなりません。
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/tournament_request"
      responses:
        "200":
          description: トーナメントの待機情報
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/tournament_response"
        default:
          description: エラーレスポンスまたはその他のレスポンス
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error_response"
    get:
      tags:
        - local_play
      summary: トーナメントの表示
      description: 試合からトーナメントに戻るためのAPI。
      responses:
        "200":
          description: トーナメント表
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/tournament_response"
        default:
          description: エラーレスポンスまたはその他のレスポンス
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error_response"

  /api/matches/local:
    get:
      tags:
        - local_play
      summary: 試合の開始
      description: 次の試合の詳細を取得します。
      responses:
        "200":
          description: 試合情報
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/match_status_local"
        default:
          description: エラーレスポンスまたはその他のレスポンス
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error_response"

  /api/matches/localtournament:
    get:
      tags:
        - local_tournamentplay
      summary: 試合の開始
      description: 次の試合の詳細を取得します。クッキーとして `tournament_id` を送信してください。
      parameters:
        - in: cookie
          name: tournament_id
          schema:
            type: integer
          required: true
          description: 取得するトーナメントのID
      responses:
        "200":
          description: 試合情報
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/match_status_tournament"
        default:
          description: エラーレスポンスまたはその他のレスポンス
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error_response"

components:
  schemas:
    tournament_request:
      type: object
      properties:
        players:
          type: array
          items:
            type: string
      required:
        - players
      example:
        players:
          - "Alice"
          - "Bob"
          - "Charlie"
          - "David"

    tournament_response:
      type: object
      properties:
        participants:
          type: array
          items:
            type: object
            properties:
              player:
                $ref: "#/components/schemas/player"
              tournament_players:
                $ref: "#/components/schemas/tournament_player"
              next_player:
                type: boolean
        tournament_id:
            type: integer
      required:
        - participants
      example:
        participants:
          - player:
              name: "Alice"
            tournament_players:
              victory_count: 0
            next_player: false
          - player:
              name: "Bob"
            tournament_players:
              victory_count: 1
            next_player: true
          - player:
              name: "Charlie"
            tournament_players:
              victory_count: 0
            next_player: true
          - player:
              name: "David"
            tournament_players:
              victory_count: 1
            next_player: false
        tournament_id: 12345

    match_status_base:
      type: object
      properties:
        left:
          type: object
          properties:
            player_name:
              type: string
        right:
          type: object
          properties:
            player_name:
              type: string
      required:
        - left
        - right

    match_status_local:
      allOf:
        - $ref: "#/components/schemas/match_status_base"
        - example:
            left:
              player_name: "Alice"
            right:
              player_name: "Bob"

    match_status_tournament:
      allOf:
        - $ref: "#/components/schemas/match_status_base"
        - example:
            left:
              player_name: "L"
            right:
              player_name: "R"

    player:
      type: object
      properties:
        name:
          type: string
      required:
        - name

    tournament_player:
      type: object
      properties:
        victory_count:
          type: integer
      required:
        - victory_count

    error_response:
      type: object
      properties:
        error_code:
          type: integer
        message:
          type: string
      required:
        - error_code
        - message
      example:
        error_code: 400
        message: "無効なリクエストです。"
