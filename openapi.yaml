openapi: 3.0.0
info:
  title: Tournament API
  version: 1.0.0
  description: トーナメント、試合、プレイヤーの管理用API。
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html

paths:
  /tournaments:
    post:
      summary: トーナメントの作成
      description: プレイヤーのリストを使用して新しいトーナメントを作成します。プレイヤーの数は2の累乗（例：2、4、8、16）でなければなりません。
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TournamentRequest"
      responses:
        "200":
          description: トーナメントの待機情報
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TournamentResponse"
        default:
          description: エラーレスポンスまたはその他のレスポンス
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
    get:
      summary: トーナメントの表示
      description: 試合からトーナメントに戻るためのAPI。
      responses:
        "200":
          description: トーナメント表
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TournamentResponse"
        default:
          description: エラーレスポンスまたはその他のレスポンス
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /matches:
    get:
      summary: 試合の開始
      description: 次の試合の詳細を取得します。
      responses:
        "200":
          description: 試合情報
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MatchResponse"
        default:
          description: エラーレスポンスまたはその他のレスポンス
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /scores:
    put:
      summary: スコアの更新
      description: 試合中のプレイヤーのスコアを増加させます。
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ScoreRequest"
      responses:
        "200":
          description: 更新された試合スコア情報
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ScoreResponse"
        default:
          description: エラーレスポンスまたはその他のレスポンス
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

components:
  schemas:
    TournamentRequest:
      type: object
      properties:
        players:
          type: array
          items:
            type: string
      example:
        players:
          - "Alice"
          - "Bob"
          - "Charlie"
          - "David"

    TournamentResponse:
      type: object
      properties:
        participants:
          type: array
          items:
            type: object
            properties:
              player:
                $ref: "#/components/schemas/Player"
              tournamentplayer:
                $ref: "#/components/schemas/TournamentPlayer"
              next_player:
                type: boolean
      example:
        participants:
          - player:
              name: "Alice"
            tournamentplayer:
              victory_count: 0
            next_player: false
          - player:
              name: "Bob"
            tournamentplayer:
              victory_count: 1
            next_player: true
          - player:
              name: "Charlie"
            tournamentplayer:
              victory_count: 0
            next_player: true
          - player:
              name: "David"
            tournamentplayer:
              victory_count: 1
            next_player: false

    MatchResponse:
      type: object
      properties:
        match_id:
          type: integer
        players:
          type: array
          items:
            type: object
            properties:
              player:
                $ref: "#/components/schemas/Player"
              matchdetail:
                $ref: "#/components/schemas/MatchDetail"
      example:
        match_id: 1
        players:
          - player:
              name: "Alice"
            matchdetail:
              player_id: 1
              match_id: 1
              score: 1
          - player:
              name: "Bob"
            matchdetail:
              player_id: 2
              match_id: 1
              score: 0

    ScoreRequest:
      type: object
      properties:
        match_id:
          type: integer
        player_id:
          type: integer
      example:
        match_id: 1
        player_id: 1

    ScoreResponse:
      type: object
      properties:
        players:
          type: array
          items:
            type: object
            properties:
              player:
                $ref: "#/components/schemas/Player"
              matchdetail:
                $ref: "#/components/schemas/MatchDetail"
        end_match:
          type: boolean
      example:
        players:
          - player:
              name: "Alice"
            matchdetail:
              player_id: 1
              match_id: 1
              score: 1
          - player:
              name: "Bob"
            matchdetail:
              player_id: 2
              match_id: 1
              score: 0
        end_match: true

    Player:
      type: object
      properties:
        name:
          type: string

    TournamentPlayer:
      type: object
      properties:
        victory_count:
          type: integer

    MatchDetail:
      type: object
      properties:
        player_id:
          type: integer
        match_id:
          type: integer
        score:
          type: integer

    ErrorResponse:
      type: object
      properties:
        error_code:
          type: integer
        message:
          type: string
      example:
        error_code: 400
        message: "無効なリクエストです。"
