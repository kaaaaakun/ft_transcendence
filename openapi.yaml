openapi: 3.0.0
info:
  title: Tournament API
  version: 1.0.0
  description: トーナメント、試合、プレイヤーの管理用API。
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html

paths:
  /tournaments:
    post:
      summary: トーナメントの作成
      description: プレイヤーのリストを使用して新しいトーナメントを作成します。プレイヤーの数は2の累乗（例：2、4、8、16）でなければなりません。
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TournamentRequest'
      responses:
        '200':
          description: トーナメントの待機情報
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TournamentResponse'
        default:
          description: エラーレスポンスまたはその他のレスポンス
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      summary: トーナメントの表示
      description: トーナメント情報を取得します。
      responses:
        '200':
          description: トーナメント情報を返します。
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TournamentResponse'
        default:
          description: エラーレスポンスまたはその他のレスポンス
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /matches:
    get:
      summary: 試合の取得
      description: 次の試合の詳細を取得します。
      responses:
        '200':
          description: 試合情報を返します。
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MatchResponse'
        default:
          description: エラーレスポンスまたはその他のレスポンス
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /scores:
    put:
      summary: スコアの更新
      description: 試合中のプレイヤーのスコアを更新します。
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScoreRequest'
      responses:
        '200':
          description: 更新された試合スコア情報を返します。
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScoreResponse'
        default:
          description: エラーレスポンスまたはその他のレスポンス
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

components:
  schemas:
    TournamentRequest:
      type: object
      properties:
        players:
          type: array
          items:
            type: string
      required:
        - players

    TournamentResponse:
      type: object
      properties:
        participants:
          type: array
          items:
            type: object
            properties:
              player:
                $ref: '#/components/schemas/Player'
              tournamentPlayer:
                $ref: '#/components/schemas/TournamentPlayer'
              nextPlayer:
                type: boolean
      required:
        - participants

    MatchResponse:
      type: object
      properties:
        matchId:
          type: integer
        players:
          type: array
          items:
            type: object
            properties:
              player:
                $ref: '#/components/schemas/Player'
              matchDetail:
                $ref: '#/components/schemas/MatchDetail'
      required:
        - matchId
        - players

    ScoreRequest:
      type: object
      properties:
        matchId:
          type: integer
        playerId:
          type: integer
      required:
        - matchId
        - playerId

    ScoreResponse:
      type: object
      properties:
        players:
          type: array
          items:
            type: object
            properties:
              player:
                $ref: '#/components/schemas/Player'
              matchDetail:
                $ref: '#/components/schemas/MatchDetail'
        endMatch:
          type: boolean
      required:
        - players
        - endMatch

    Player:
      type: object
      properties:
        name:
          type: string
      required:
        - name

    TournamentPlayer:
      type: object
      properties:
        victoryCount:
          type: integer
      required:
        - victoryCount

    MatchDetail:
      type: object
      properties:
        playerId:
          type: integer
        matchId:
          type: integer
        score:
          type: integer
      required:
        - playerId
        - matchId
        - score

    ErrorResponse:
      type: object
      properties:
        errorCode:
          type: integer
        message:
          type: string
      required:
        - errorCode
        - message
      example:
        errorCode: 400
        message: "無効なリクエストです。"

