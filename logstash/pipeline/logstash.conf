input {
  beats {
    port => 5044
  }
  http {
    port => 8080
  }
}

filter {
  if [docker][container][name] == "elasticsearch" {
    grok {
      match => {
        "message" => [
          '{"@timestamp":"%{TIMESTAMP_ISO8601:@timestamp}", "log.level": "%{LOGLEVEL:log_level}", "message":"%{GREEDYDATA:message}", "ecs.version": "%{DATA:ecs_version}","service.name":"%{DATA:service_name}","event.dataset":"%{DATA:event_dataset}","process.thread.name":"%{DATA:process_thread_name}","log.logger":"%{DATA:log_logger}","elasticsearch.cluster.uuid":"%{DATA:elasticsearch_cluster_uuid}","elasticsearch.node.id":"%{DATA:elasticsearch_node_id}","elasticsearch.node.name":"%{DATA:elasticsearch_node_name}","elasticsearch.cluster.name":"%{DATA:elasticsearch_cluster_name}"}'
        ]
      }
    }
    date {
      match => ["@timestamp", "ISO8601"]
      target => "@timestamp"
    }
  } else if [docker][container][name] == "filebeat-1" {
    json {
      source => "message"
      target => "filebeat_metrics"
      tag_on_failure => ["json_parse_failure"]
    }
    if [filebeat_metrics] {
      date {
        match => ["filebeat_metrics.@timestamp", "ISO8601"]
        target => "@timestamp"
      }
      mutate {
        remove_field => ["message"]
        convert => {
          "[filebeat_metrics][monitoring][metrics][beat][cpu][total][time][ms]" => "integer"
          "[filebeat_metrics][monitoring][metrics][beat][info][uptime][ms]" => "integer"
        }
      }
      if [filebeat_metrics][monitoring][metrics][beat][cpu][total][time][ms] and [filebeat_metrics][monitoring][metrics][beat][info][uptime][ms] and [filebeat_metrics][monitoring][metrics][beat][info][uptime][ms] > 0 {
        ruby {
          code => '
            cpu_total_ms = event.get("[filebeat_metrics][monitoring][metrics][beat][cpu][total][time][ms]")
            uptime_ms = event.get("[filebeat_metrics][monitoring][metrics][beat][info][uptime][ms]")
            if cpu_total_ms and uptime_ms and uptime_ms > 0
              cpu_usage = (cpu_total_ms.to_f / uptime_ms.to_f) * 100
              event.set("cpu_usage", cpu_usage)
            end
          '
        }
      }
      mutate {
        remove_field => ["[filebeat_metrics][monitoring][metrics][beat][cpu][total][time][ms]", "[filebeat_metrics][monitoring][metrics][beat][info][uptime][ms]"]
      }
    }
  }
}

output {
  elasticsearch {
    hosts => ["http://elasticsearch:9200"]
    user => "${ELASTIC_USER}"
    password => "${ELASTIC_PASSWORD}"
    index => "docker-logs-%{+YYYY.MM.dd}"
  }
}